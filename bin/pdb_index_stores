#!/usr/bin/env php

<?php
ini_set("display_errors", "1");
ini_set("error_reporting", E_ALL);
print '======= Starting Indexation ======='.PHP_EOL;

$pdo = new PDO("mysql:host={$argv[1]};dbname={$argv[2]};charset=UTF8;", $argv[3], $argv[4]);
$store_query = $pdo->query("SELECT * FROM store ORDER BY uid ASC");

$path = str_contains($argv[1], 'prd') ? 'search.laplateforme.com' : 'search-test.laplateforme.com';
$ads_path = "/srv/www/sites/{$path}/current";

$store_uids = $store_query->fetchAll(PDO::FETCH_COLUMN);
$indexing_store_uid_position = 0;
$stores = count($store_uids);
$concurrent_tasks = 8;

while ($indexing_store_uid_position < $stores) {
  $indexing_store_uids = array_slice($store_uids, $indexing_store_uid_position, $concurrent_tasks);

  foreach ($indexing_store_uids as $i => $store_uid) {
    $pid = pcntl_fork();

    if ($pid == -1) {
      exit("Store [{$store_uid}] Error when forking");
    } else if ($pid == 0) {
      $attempts = 1;
      $retry_on_fail = true;

      while ($retry_on_fail && $attempts <= 10) {
        $output=null;
        $returned_val=null;
        $command = "php {$ads_path}/bin/console --env=prod ads:exec K0p1YIMBcVx9qtAZD7GP {$store_uid} > {$ads_path}/var/log/index_{$store_uid}.log 2>&1";
        sleep($i);
        print "Store [{$store_uid}] Attempt [{$attempts}] => ".$command.PHP_EOL;
        exec($command, $output, $returned_val);

        $attempts++;
        if ($returned_val === 0) $retry_on_fail = false;
        else sleep(2);
      }
      exit();
    }
  }

  while(pcntl_waitpid(0, $status) != -1);
  print '---'.PHP_EOL;
  $indexing_store_uid_position += $concurrent_tasks;
}

print '======= Remove old products ======='.PHP_EOL;
$cmd = "php {$ads_path}/bin/console --env=prod ads:delete-by-query AWxxYcm9riNEsh0BkRkW > {$ads_path}/var/log/index_clean.log 2>&1";
print $cmd.PHP_EOL;
exec($cmd);

print '======= Finishing Indexation =======';
