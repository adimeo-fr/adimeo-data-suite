workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/
      variables:
        JFROG_DIR: 'production'
    - if: $CI_COMMIT_BRANCH =~ /^release\/.+$/
      variables:
        JFROG_DIR: 'preproduction'
    - if: $CI_COMMIT_BRANCH =~ /^(recette|integration)$/

image:
  name: artifacts.saint-gobain.com/eai-000-docker-public-local/php:8.1.3
  entrypoint: [""]

variables:
  ARTIFACT_DIR: output
  JFROG_DIR: $CI_COMMIT_BRANCH

stages:
  - build
  - deploy

build_composer:
  stage: build
  artifacts:
    name: "$CI_PROJECT_NAME"
    paths:
      - $ARTIFACT_DIR/*
    expire_in: 5 days
  tags:
    - website_node
  script:
    - export APP_ENV=prod
    - curl -x "$CLN_PROXY" -o composer-setup.php https://getcomposer.org/installer
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar --version
    - apt-get update && apt-get -y install unzip zip git 
    - php composer.phar install --ignore-platform-reqs  --no-dev --optimize-autoloader
    - php bin/console assets:install
    - rm -rf .git*
    - rm -rf var/cache/prod
    - rm composer.phar
    - cp .env.dist .env
    - sed -i 's;ELASTICSEARCH_SERVER_URL=http://localhost:9200;ELASTICSEARCH_SERVER_URL=<elasticsearch_url>;g' .env
    - sed -i 's;STAT_ELASTICSEARCH_SERVER_URL=http://localhost:9200;STAT_ELASTICSEARCH_SERVER_URL=<elasticsearch_url>;g' .env
    - sed -i 's;RECO_ELASTICSEARCH_SERVER_URL=http://localhost:9200;RECO_ELASTICSEARCH_SERVER_URL=<elasticsearch_url>;g' .env
    - sed -i 's;ADS_INDEX_NB_REPLICAS=0;ADS_INDEX_NB_REPLICAS=1;g' .env
    - sed -i 's;ADS_STAT_INDEX_NB_REPLICAS=0;ADS_STAT_INDEX_NB_REPLICAS=1;g' .env
    - sed -i 's;ADS_RECO_INDEX_NB_REPLICAS=0;ADS_RECO_INDEX_NB_REPLICAS=1;g' .env
    - sed -i 's;MAX_REPLICAS=0;MAX_REPLICAS=1;g' .env
    - sed -i 's;ADS_API_APPLY_BOOSTING=0;ADS_API_APPLY_BOOSTING=1;g' .env
    - sed -i 's;IS_LEGACY=0;IS_LEGACY=1;g' .env
    - sed -i 's;COLLECT_STATS=1;COLLECT_STATS=0;g' .env
    - zip -qr "$CI_PROJECT_NAME" *
    - zip "$CI_PROJECT_NAME".zip .env
    - mkdir $ARTIFACT_DIR
    - mv "$CI_PROJECT_NAME".zip ./$ARTIFACT_DIR/"$CI_PROJECT_NAME"-"$CI_COMMIT_SHORT_SHA".zip

deploy_jfrog:
  stage: deploy
  tags:
    - website_node
  script:
    - RESULT=$(curl -sk -H "X-JFrog-Art-Api:$JFROG_API_KEY" -o /dev/null -w "%{http_code}" "$JFROG_ARTIFACTORY"/"$JFROG_REPO_COMPOSER"/"$JFROG_DIR"/ -T  $ARTIFACT_DIR/"$CI_PROJECT_NAME"-"$CI_COMMIT_SHORT_SHA".zip)
    - if [ "$RESULT" != "201" ]; then echo "Error artifact not created => http code $RESULT" && exit 2; else echo "Success on post artifact";  fi
